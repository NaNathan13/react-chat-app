{"version":3,"sources":["components/ColorPanel/ColorPanel.js","firebase.js","components/SidePanel/UserPanel.js","components/SidePanel/Channels.js","actions/index.js","actions/types.js","components/SidePanel/SidePanel.js","components/Messages/MessagesHeader.js","components/Messages/MessageForm.js","components/Messages/Message.js","components/Messages/Messages.js","components/MetaPanel/MetaPanel.js","components/App.js","components/Auth/Login.js","components/Auth/Register.js","Spinner.js","registerServiceWorker.js","reducers/index.js","index.js"],"names":["ColorPanel","react_default","a","createElement","Sidebar","as","Menu","icon","inverted","vertical","visible","width","Divider","Button","size","color","React","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","UserPanel","state","user","_this","props","currentUser","dropdownOptions","key","text","displayName","disabled","onClick","handleSignout","auth","signOut","then","console","log","this","Grid","style","background","Column","Row","padding","margin","Header","floated","Icon","name","Content","Dropdown","trigger","Image","src","photoURL","spaced","avatar","options","Channels","activeChannel","channels","channelName","channelDetails","channelsRef","database","ref","modal","firstLoad","addListeners","loadedChannels","on","snap","push","val","setState","setFirstChannel","removeListeners","off","firstChannel","length","setCurrentChannel","setActiveChannel","addChannel","_this$state","newChannel","id","details","createdBy","child","update","closeModal","catch","err","error","handleSubmit","event","preventDefault","isFormValid","handleChange","Object","defineProperty","target","value","changeChannel","channel","displayChannels","map","Item","opacity","active","_ref","openModal","_this$state2","Fragment","paddingBottom","Modal","basic","open","onClose","Form","onSubmit","Field","Input","fluid","label","onChange","Actions","connect","type","payload","currentChannel","SidePanel","fixed","fontSize","SidePanel_UserPanel","SidePanel_Channels","MessagesHeader","Segment","clearing","marginBottom","Subheader","placeholder","MessageForm","message","loading","errors","createMessage","timestamp","ServerValue","TIMESTAMP","uid","content","sendMessage","messagesRef","set","concat","className","labelPosition","some","includes","Group","widths","isOwnMessage","Message","Comment","Avatar","Author","Metadata","moment","fromNow","Text","Messages","messages","messagesLoading","channelId","addMessageListener","loadedMessages","displayMessages","Messages_Message","Messages_MessagesHeader","Messages_MessageForm","MetaPanel","columns","components_ColorPanel_ColorPanel","components_SidePanel_SidePanel","marginLeft","components_Messages_Messages","components_MetaPanel_MetaPanel","Login","email","password","displayErrors","i","signInWithEmailAndPassword","signedInUser","handleInputError","inputName","toLowerCase","textAlign","verticalAlign","maxWidth","stacked","iconPosition","collections_Message_Message","Link","to","Register","username","passwordConfirmation","usersRef","isFormEmpty","isPasswordValid","_ref2","createUserWithEmailAndPassword","createdUser","updateProfile","md5","saveUser","Spinner","Dimmer","Loader","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialUserState","isLoading","initialChannelState","rootReducer","combineReducers","arguments","undefined","action","objectSpread","store","createStore","composeWithDevTools","Root","onAuthStateChanged","setUser","history","clearUser","src_Spinner","Switch","Route","exact","path","component","App","RootWithAuth","withRouter","ReactDOM","render","es","BrowserRouter","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.17de84aa.chunk.js","sourcesContent":["import React from \"react\";\nimport { Sidebar, Menu, Divider, Button } from \"semantic-ui-react\";\n\nclass ColorPanel extends React.Component {\n  render() {\n    return (\n      <Sidebar\n        as={Menu}\n        icon=\"labeled\"\n        inverted\n        vertical\n        visible\n        width=\"very thin\"\n      >\n        <Divider />\n        <Button icon=\"add\" size=\"small\" color=\"blue\" />\n      </Sidebar>\n    );\n  }\n}\n\nexport default ColorPanel;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nvar config = {\n  apiKey: \"AIzaSyAO8JkH3T_-Ep75f1WRZVyQq2o1jyzpigs\",\n  authDomain: \"react-slack-clone-cbdc8.firebaseapp.com\",\n  databaseURL: \"https://react-slack-clone-cbdc8.firebaseio.com\",\n  projectId: \"react-slack-clone-cbdc8\",\n  storageBucket: \"react-slack-clone-cbdc8.appspot.com\",\n  messagingSenderId: \"654671405148\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { Grid, Header, Icon, Dropdown, Image } from \"semantic-ui-react\";\n\nclass UserPanel extends React.Component {\n  state = {\n    user: this.props.currentUser\n  };\n\n  dropdownOptions = () => [\n    {\n      key: \"user\",\n      text: (\n        <span>\n          Signed in as <strong>{this.state.user.displayName}</strong>\n        </span>\n      ),\n      disabled: true\n    },\n    {\n      key: \"avatar\",\n      text: <span>Change Avatar</span>\n    },\n    {\n      key: \"signout\",\n      text: <span onClick={this.handleSignout}>Sign Out</span>\n    }\n  ];\n\n  handleSignout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => console.log(\"signed out!\"));\n  };\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <Grid style={{ background: \"#4c3c4c\" }}>\n        <Grid.Column>\n          <Grid.Row style={{ padding: \"1.2em\", margin: 0 }}>\n            {/* App Header */}\n            <Header inverted floated=\"left\" as=\"h2\">\n              <Icon name=\"code\" />\n              <Header.Content>Project ChatApp</Header.Content>\n            </Header>\n\n            {/* User Dropdown  */}\n            <Header style={{ padding: \"0.25em\" }} as=\"h4\" inverted>\n              <Dropdown\n                trigger={\n                  <span>\n                    <Image src={user.photoURL} spaced=\"right\" avatar />\n                    {user.displayName}\n                  </span>\n                }\n                options={this.dropdownOptions()}\n              />\n            </Header>\n          </Grid.Row>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default UserPanel;\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCurrentChannel } from \"../../actions\";\nimport { Menu, Icon, Modal, Form, Input, Button } from \"semantic-ui-react\";\n\nclass Channels extends React.Component {\n  state = {\n    activeChannel: \"\",\n    user: this.props.currentUser,\n    channels: [],\n    channelName: \"\",\n    channelDetails: \"\",\n    channelsRef: firebase.database().ref(\"channels\"),\n    modal: false,\n    firstLoad: true\n  };\n\n  componentDidMount() {\n    this.addListeners();\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  addListeners = () => {\n    let loadedChannels = [];\n    this.state.channelsRef.on(\"child_added\", snap => {\n      loadedChannels.push(snap.val());\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel());\n    });\n  };\n\n  removeListeners = () => {\n    this.state.channelsRef.off();\n  };\n\n  setFirstChannel = () => {\n    const firstChannel = this.state.channels[0];\n    if (this.state.firstLoad && this.state.channels.length > 0) {\n      this.props.setCurrentChannel(firstChannel);\n      this.setActiveChannel(firstChannel);\n    }\n    this.setState({ firstLoad: false });\n  };\n\n  addChannel = () => {\n    const { channelsRef, channelName, channelDetails, user } = this.state;\n\n    const key = channelsRef.push().key;\n\n    const newChannel = {\n      id: key,\n      name: channelName,\n      details: channelDetails,\n      createdBy: {\n        name: user.displayName,\n        avatar: user.photoURL\n      }\n    };\n\n    channelsRef\n      .child(key)\n      .update(newChannel)\n      .then(() => {\n        this.setState({ channelName: \"\", channelDetails: \"\" });\n        this.closeModal();\n        console.log(\"channel added\");\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.addChannel();\n    }\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  changeChannel = channel => {\n    this.setActiveChannel(channel);\n    this.props.setCurrentChannel(channel);\n  };\n\n  setActiveChannel = channel => {\n    this.setState({ activeChannel: channel.id });\n  };\n\n  displayChannels = channels =>\n    channels.length > 0 &&\n    channels.map(channel => (\n      <Menu.Item\n        key={channel.id}\n        onClick={() => this.changeChannel(channel)}\n        name={channel.name}\n        style={{ opacity: 0.7 }}\n        active={channel.id === this.state.activeChannel}\n      >\n        # {channel.name}\n      </Menu.Item>\n    ));\n\n  isFormValid = ({ channelName, channelDetails }) =>\n    channelName && channelDetails;\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  render() {\n    const { channels, modal } = this.state;\n\n    return (\n      <React.Fragment>\n        <Menu.Menu style={{ paddingBottom: \"2em\" }}>\n          <Menu.Item>\n            <span>\n              <Icon name=\"exchange\" /> CHANNELS\n            </span>{\" \"}\n            ({channels.length}) <Icon name=\"add\" onClick={this.openModal} />\n          </Menu.Item>\n          {this.displayChannels(channels)}\n        </Menu.Menu>\n\n        {/* Add Channel Modal */}\n        <Modal basic open={modal} onClose={this.closeModal}>\n          <Modal.Header>Add a Channel</Modal.Header>\n          <Modal.Content>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Field>\n                <Input\n                  fluid\n                  label=\"Name of Channel\"\n                  name=\"channelName\"\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n\n              <Form.Field>\n                <Input\n                  fluid\n                  label=\"About the Channel\"\n                  name=\"channelDetails\"\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n            </Form>\n          </Modal.Content>\n\n          <Modal.Actions>\n            <Button color=\"green\" inverted onClick={this.handleSubmit}>\n              <Icon name=\"checkmark\" /> Add\n            </Button>\n            <Button color=\"red\" inverted onClick={this.closeModal}>\n              <Icon name=\"remove\" /> Cancel\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setCurrentChannel }\n)(Channels);\n","import * as actionTypes from \"./types\";\n\n/* User Actions */\nexport const setUser = user => {\n  return {\n    type: actionTypes.SET_USER,\n    payload: {\n      currentUser: user\n    }\n  };\n};\n\nexport const clearUser = () => {\n  return {\n    type: actionTypes.CLEAR_USER\n  };\n};\n\n/* Channel Actions */\nexport const setCurrentChannel = channel => {\n  return {\n    type: actionTypes.SET_CURRENT_CHANNEL,\n    payload: {\n      currentChannel: channel\n    }\n  }\n}","/* User Action Types */\nexport const SET_USER = \"SET_USER\";\nexport const CLEAR_USER = \"CLEAR_USER\";\n\n/* Channel Action Types */\nexport const SET_CURRENT_CHANNEL = \"SET_CURRENT_CHANNEL\";","import React from \"react\";\nimport UserPanel from \"./UserPanel\";\nimport Channels from \"./Channels\";\nimport { Menu } from \"semantic-ui-react\";\n\nclass SidePanel extends React.Component {\n  render() {\n    const { currentUser } = this.props;\n\n    return (\n      <Menu\n        size=\"small\"\n        inverted\n        fixed=\"left\"\n        vertical\n        style={{ background: \"#4c3c4c\", fontSize: \"1.2rem\" }}\n      >\n        <UserPanel currentUser={currentUser} />\n        <Channels currentUser={currentUser} />\n      </Menu>\n    );\n  }\n}\n\nexport default SidePanel;\n","import React from \"react\";\nimport { Header, Segment, Input, Icon } from \"semantic-ui-react\";\n\nclass MessagesHeader extends React.Component {\n  render() {\n    return (\n      <Segment clearing>\n        {/* Channel Title */}\n        <Header fluid=\"true\" as=\"h2\" floated=\"left\" style={{ marginBottom: 0 }}>\n          <span>\n            Channel\n            <Icon name={\"star outline\"} color=\"black\" />\n          </span>\n          <Header.Subheader>2 Users</Header.Subheader>\n        </Header>\n\n        {/* Channel Search Input */}\n        <Header floated=\"right\">\n          <Input\n            size=\"mini\"\n            icon=\"search\"\n            name=\"searchTerm\"\n            placeholder=\"Search Messages\"\n          />\n        </Header>\n      </Segment>\n    );\n  }\n}\n\nexport default MessagesHeader;\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { Segment, Button, Input } from \"semantic-ui-react\";\n\nclass MessageForm extends React.Component {\n  state = {\n    message: \"\",\n    channel: this.props.currentChannel,\n    user: this.props.currentUser,\n    loading: false,\n    errors: []\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  createMessage = () => {\n    const message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: this.state.user.uid,\n        name: this.state.user.displayName,\n        avatar: this.state.user.photoURL\n      },\n      content: this.state.message\n    };\n    return message;\n  };\n\n  sendMessage = () => {\n    const { messagesRef } = this.props;\n    const { message, channel } = this.state;\n\n    if (message) {\n      this.setState({ loading: true });\n      messagesRef\n        .child(channel.id)\n        .push()\n        .set(this.createMessage())\n        .then(() => {\n          this.setState({ loading: false, message: \"\", errors: [] });\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            loading: false,\n            errors: this.state.errors.concat(err)\n          });\n        });\n    } else {\n      this.setState({\n        errors: this.state.errors.concat({ message: \"Add a message\" })\n      });\n    }\n  };\n\n  render() {\n    const { errors, message, loading } = this.state;\n\n    return (\n      <Segment className=\"message__form\">\n        <Input\n          fluid\n          name=\"message\"\n          onChange={this.handleChange}\n          value={message}\n          style={{ marginBottom: \"0.7em\" }}\n          label={<Button icon={\"add\"} />}\n          labelPosition=\"left\"\n          className={\n            errors.some(error => error.message.includes(\"message\"))\n              ? \"error\"\n              : \"\"\n          }\n          placeholder=\"Write your message\"\n        />\n        <Button.Group icon widths=\"2\">\n          <Button\n            onClick={this.sendMessage}\n            disabled={loading}\n            color=\"orange\"\n            content=\"Add Reply\"\n            labelPosition=\"left\"\n            icon=\"edit\"\n          />\n          <Button\n            color=\"teal\"\n            content=\"Upload Media\"\n            labelPosition=\"right\"\n            icon=\"cloud upload\"\n          />\n        </Button.Group>\n      </Segment>\n    );\n  }\n}\n\nexport default MessageForm;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Comment } from \"semantic-ui-react\";\n\nconst isOwnMessage = (message, user) => {\n  return message.user.id === user.uid ? \"message__self\" : \"\";\n};\n\nconst timeFromNow = timestamp => moment(timestamp).fromNow();\n\nconst Message = ({ message, user }) => (\n  <Comment>\n    <Comment.Avatar src={message.user.avatar} />\n    <Comment.Content className={isOwnMessage(message, user)}>\n      <Comment.Author as=\"a\">{message.user.name}</Comment.Author>\n      <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\n      <Comment.Text>{message.content}</Comment.Text>\n    </Comment.Content>\n  </Comment>\n);\n\nexport default Message;\n","import React from \"react\";\nimport { Segment, Comment } from \"semantic-ui-react\";\nimport firebase from \"../../firebase\";\n\nimport MessagesHeader from \"./MessagesHeader\";\nimport MessageForm from \"./MessageForm\";\nimport Message from \"./Message\";\n\nclass Messages extends React.Component {\n  state = {\n    messagesRef: firebase.database().ref(\"messages\"),\n    messages: [],\n    messagesLoading: true,\n    channel: this.props.currentChannel,\n    user: this.props.currentUser\n  };\n\n  componentDidMount() {\n    const { channel, user } = this.state;\n\n    if (channel && user) {\n      this.addListeners(channel.id);\n    }\n  }\n\n  addListeners = channelId => {\n    this.addMessageListener(channelId);\n  };\n\n  addMessageListener = channelId => {\n    let loadedMessages = [];\n    this.state.messagesRef.child(channelId).on(\"child_added\", snap => {\n      loadedMessages.push(snap.val());\n      this.setState({\n        messages: loadedMessages,\n        messagesLoading: false\n      });\n    });\n  };\n\n  displayMessages = messages =>\n    messages.length > 0 &&\n    messages.map(message => (\n      <Message\n        key={message.timestamp}\n        message={message}\n        user={this.state.user}\n      />\n    ));\n\n  render() {\n    const { messagesRef, messages, channel, user } = this.state;\n\n    return (\n      <React.Fragment>\n        <MessagesHeader />\n\n        <Segment>\n          <Comment.Group className=\"messages\">\n            {this.displayMessages(messages)}\n          </Comment.Group>\n        </Segment>\n\n        <MessageForm\n          messagesRef={messagesRef}\n          currentChannel={channel}\n          currentUser={user}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Messages;\n","import React from \"react\";\n\nclass MetaPanel extends React.Component {\n  render() {\n    return <div>MetaPanel</div>;\n  }\n}\n\nexport default MetaPanel;\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\n\nimport ColorPanel from \"./ColorPanel/ColorPanel\";\nimport SidePanel from \"./SidePanel/SidePanel\";\nimport Messages from \"./Messages/Messages\";\nimport MetaPanel from \"./MetaPanel/MetaPanel\";\n\nconst App = ({ currentUser, currentChannel }) => (\n  <Grid columns=\"equal\" className=\"app\" style={{ background: \"#eee\" }}>\n    <ColorPanel />\n    <SidePanel key={currentUser && currentUser.uid} currentUser={currentUser} />\n\n    <Grid.Column style={{ marginLeft: 320 }}>\n      <Messages\n        key={currentChannel && currentChannel.id}\n        currentChannel={currentChannel}\n        currentUser={currentUser}\n      />\n    </Grid.Column>\n\n    <Grid.Column width={4}>\n      <MetaPanel />\n    </Grid.Column>\n  </Grid>\n);\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  currentChannel: state.channel.currentChannel\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    errors: [],\n    loading: false\n  };\n\n  displayErrors = errors =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.setState({ errors: [], loading: true });\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then(signedInUser => {\n          console.log(signedInUser);\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false\n          });\n        });\n    }\n  };\n\n  isFormValid = ({ email, password }) => email && password;\n\n  handleInputError = (errors, inputName) => {\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\n      ? \"error\"\n      : \"\";\n  };\n\n  render() {\n    const { email, password, errors, loading } = this.state;\n\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\" icon color=\"violet\" textAlign=\"center\">\n            Login to Project ChatApp \n          </Header>\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"email\"\n                placeholder=\"Email Address\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.handleInputError(errors, \"email\")}\n                type=\"email\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={password}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Button\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                color=\"violet\"\n                fluid\n                size=\"large\"\n              >\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>\n            Don't have an account? <Link to=\"/register\">Register</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport md5 from \"md5\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nclass Register extends React.Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    errors: [],\n    loading: false,\n    usersRef: firebase.database().ref(\"users\")\n  };\n\n  isFormValid = () => {\n    let errors = [];\n    let error;\n\n    if (this.isFormEmpty(this.state)) {\n      error = { message: \"Fill in all fields\" };\n      this.setState({ errors: errors.concat(error) });\n      return false;\n    } else if (!this.isPasswordValid(this.state)) {\n      error = { message: \"Password is invalid\" };\n      this.setState({ errors: errors.concat(error) });\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  isFormEmpty = ({ username, email, password, passwordConfirmation }) => {\n    return (\n      !username.length ||\n      !email.length ||\n      !password.length ||\n      !passwordConfirmation.length\n    );\n  };\n\n  isPasswordValid = ({ password, passwordConfirmation }) => {\n    if (password.length < 6 || passwordConfirmation.length < 6) {\n      return false;\n    } else if (password !== passwordConfirmation) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  displayErrors = errors =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid()) {\n      this.setState({ errors: [], loading: true });\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .then(createdUser => {\n          console.log(createdUser);\n          createdUser.user\n            .updateProfile({\n              displayName: this.state.username,\n              photoURL: `http://gravatar.com/avatar/${md5(\n                createdUser.user.email\n              )}?d=identicon`\n            })\n            .then(() => {\n              this.saveUser(createdUser).then(() => {\n                console.log(\"user saved\");\n              });\n            })\n            .catch(err => {\n              console.error(err);\n              this.setState({\n                errors: this.state.errors.concat(err),\n                loading: false\n              });\n            });\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false\n          });\n        });\n    }\n  };\n\n  saveUser = createdUser => {\n    return this.state.usersRef.child(createdUser.user.uid).set({\n      name: createdUser.user.displayName,\n      avatar: createdUser.user.photoURL\n    });\n  };\n\n  handleInputError = (errors, inputName) => {\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\n      ? \"error\"\n      : \"\";\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      password,\n      passwordConfirmation,\n      errors,\n      loading\n    } = this.state;\n\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\" icon color=\"orange\" textAlign=\"center\">\n            Register for Project ChatApp\n          </Header>\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"username\"\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Username\"\n                onChange={this.handleChange}\n                value={username}\n                type=\"text\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"email\"\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"Email Address\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.handleInputError(errors, \"email\")}\n                type=\"email\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={password}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"passwordConfirmation\"\n                icon=\"repeat\"\n                iconPosition=\"left\"\n                placeholder=\"Password Confirmation\"\n                onChange={this.handleChange}\n                value={passwordConfirmation}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Button\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                color=\"orange\"\n                fluid\n                size=\"large\"\n              >\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>\n            Already a user? <Link to=\"/login\">Login</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\n\nconst Spinner = () => (\n  <Dimmer active>\n    <Loader size=\"huge\" content={\"Preparing Chat...\"} />\n  </Dimmer>\n);\n\nexport default Spinner;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport * as actionTypes from \"../actions/types\";\n\nconst initialUserState = {\n  currentUser: null,\n  isLoading: true\n};\n\nconst user_reducer = (state = initialUserState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        currentUser: action.payload.currentUser,\n        isLoading: false\n      };\n    case actionTypes.CLEAR_USER:\n      return {\n        ...state,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialChannelState = {\n  currentChannel: null\n};\n\nconst channel_reducer = (state = initialChannelState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CURRENT_CHANNEL:\n      return {\n        ...state,\n        currentChannel: action.payload.currentChannel\n      }\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  user: user_reducer,\n  channel: channel_reducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport Login from \"./components/Auth/Login\";\nimport Register from \"./components/Auth/Register\";\nimport Spinner from \"./Spinner\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport firebase from \"./firebase\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter\n} from \"react-router-dom\";\n\nimport { createStore } from \"redux\";\nimport { Provider, connect } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport { setUser, clearUser } from \"./actions\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nclass Root extends React.Component {\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        // console.log(user);\n        this.props.setUser(user);\n        this.props.history.push(\"/\");\n      } else {\n        this.props.history.push(\"/login\");\n        this.props.clearUser();\n      }\n    });\n  }\n\n  render() {\n    return this.props.isLoading ? (\n      <Spinner />\n    ) : (\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateFromProps = state => ({\n  isLoading: state.user.isLoading\n});\n\nconst RootWithAuth = withRouter(\n  connect(\n    mapStateFromProps,\n    { setUser, clearUser }\n  )(Root)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <RootWithAuth />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}